#!/usr/bin/env bash

# this is a simple config for herbstluftwm

hc() {
    herbstclient "$@"
}

hc emit_hook reload

pidof lxpolkit || lxpolkit &
pidof picom || picom --experimental-backends & # build from next branch on git
pidof nm-applet || nm-applet &
# pidof -x blueman-tray || blueman-tray &
pidof xfce4-power-manager || xfce4-power-manager &

# Launch custom optimus-manager tray icon
if [[ -f $(which optimus-manager) ]]; then
    $HOME/.local/scripts/launch-optimus-indicator > /tmp/launch-optimus-indicator.log
fi

# Set wallpaper
$HOME/.local/scripts/setbg 2> /dev/null

# Start conky
# $HOME/.config/conky/launch-conky.sh 2> /dev/null

# Lauch polybar
$HOME/.config/herbstluftwm/launch-polybar.sh &

# Cache image for betterlockscreen
betterlockscreen -u $HOME/.dotfiles/wallpapers &

# remove all existing keybindings
hc keyunbind --all

# keybindings
Mod=Mod4   # Use the super key as the main modifier
alt=Mod1
myTerminal=$TERMINAL
myBrowser=$BROWSER
myScripts=$SCRIPTS

hc keybind $Mod-Control-q quit
hc keybind $Mod-Control-r reload
hc keybind $Mod-q spawn $myScripts/hlswap close
hc keybind $alt-space spawn polybar-msg cmd restart

# Applications
hc keybind $Mod-Return spawn $myTerminal

# Dropdown
hc keybind $Mod-Tab spawn \
    tdrop --wm herbstluftwm \
    -m -w 50% -h 50% -x 480 -y 270 \
    -L "herbstclient attr clients.focus.floating on" "$myTerminal-workaround" -e ranger ~
# tdrop -ma -w 1915 -h 50% -x 0 -y 29 $myTerminal # Top half of screen

hc keybind $Mod-b spawn $myBrowser
hc keybind $Mod-n spawn $myTerminal -e ranger ~

# Rofi
hc keybind $Mod-space spawn rofi -modi drun -show drun -theme ~/.dotfiles/rofi-themes/dt-dmenu.rasi -terminal $myTerminal
hc keybind $Mod-Shift-space spawn rofi -theme ~/.dotfiles/rofi-themes/dt-dmenu.rasi -terminal $myTerminal -modi window -show

hc keybind Control-Print spawn screenkey
hc keybind Menu spawn $myScripts/powermenu

# Lock screen
hc keybind $Mod-BackSpace spawn betterlockscreen -l dim -t
hc keybind $Mod-Shift-BackSpace spawn betterlockscreen -s dim -t

# Screenshot
hc keybind Print spawn $myScripts/maimscreen
hc keybind $Mod-Print spawn $myScripts/maimpick-rofi

hc keybind $Mod-Menu spawn $myScripts/displayselect
hc keybind $Mod-Shift-Menu spawn $myScripts/gputoggle

# Brightness and volume
# hc keybind XF86MonBrightnessUp spawn xbacklight -inc 10
# hc keybind XF86MonBrightnessDown spawn xbacklight -dec 10
# hc keybind XF86AudioRaiseVolume spawn amixer set 'Master' 5%+
# hc keybind XF86AudioLowerVolume spawn amixer set 'Master' 5%-
hc keybind XF86AudioRaiseVolume spawn $myScripts/volume -n up 5
hc keybind XF86AudioLowerVolume spawn $myScripts/volume -n down 5
hc keybind XF86AudioMute spawn $myScripts/volume -n mute



# basic movement in tiling and floating mode
# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# moving clients in tiling and floating mode
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

# custom master-stack layout bindings
hc keybind $alt-h spawn $myScripts/hlswap auto
hc keybind $alt-l spawn $myScripts/hlswap auto

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u split bottom 0.5
hc keybind $Mod-o split right 0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# tags
tag_names=("DEV" "WWW" "FILE" "CHAT" "VIRT" "MISC")
tag_keys=( {1..6} )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        # hc keybind "$Mod-$key" spawn $myScripts/hl_tag_notify tag_index "$i"
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
hc keybind $Mod-bracketright use_index +1 --skip-visible
hc keybind $Mod-bracketleft  use_index -1 --skip-visible
# hc keybind $Mod-bracketleft spawn $myScripts/hl_tag_notify prev_tag
# hc keybind $Mod-bracketright spawn $myScripts/hl_tag_notify next_tag

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-s attr clients.focus.floating toggle
hc keybind $Mod-f fullscreen toggle
# hc keybind $Mod-p pseudotile toggle
hc keybind $Mod-m cycle_layout 1 vertical max
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
# hc keybind $Mod-grave                                                           \
#     or , and . compare tags.focus.curframe_wcount = 2                   \
#     . cycle_layout +1 vertical horizontal max grid    \
#     , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
# if [[ $(hc list_monitors | wc -l) == 2]]; then
hc keybind $Mod-Control-0 shift_to_monitor 0
hc keybind $Mod-Control-1 shift_to_monitor 1
hc keybind $Mod-semicolon cycle_monitor
# fi
hc keybind $alt-Tab cycle
hc keybind $alt-grave cycle_all 1
hc keybind $Mod-Escape use_previous
# hc keybind $Mod-Escape spawn $myScripts/hl_tag_notify use_prev
hc keybind $Mod-i jumpto urgent
# hc keybind $Mod-i spawn $myScripts/hl_tag_notify use_urgent

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#222222'
hc set frame_border_normal_color '#101010'
hc set frame_bg_normal_color '#565656'
hc set frame_bg_active_color '#345F0C'
hc set frame_border_width 1
hc set always_show_frame off
hc set frame_bg_transparent on
hc set frame_transparent_width 0
hc set frame_gap 1

hc attr theme.active.color '#9fbc00'
hc attr theme.normal.color '#454545'
hc attr theme.urgent.color orange
hc attr theme.inner_width 1
hc attr theme.inner_color black
hc attr theme.border_width 2
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#3E4A00'
hc attr theme.active.outer_color '#3E4A00'
hc attr theme.background_color '#141414'

hc set window_gap 0
hc set frame_padding 0
hc set smart_window_surroundings off
hc set smart_frame_surroundings on
hc set mouse_recenter_gap 0
hc set swap_monitors_to_get_tag 0

# rules
hc unrule -F
hc rule focus=on # normally focus new clients
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule class='Brave-browser' tag='WWW'
hc rule class='Citra' tag='MISC'
hc rule class='Pamac-manager' tag='MISC'
hc rule class='Pcmanfm' tag='FILE'
hc rule class='VSCodium' tag='DEV'
hc rule class='Ferdi' tag='CHAT'
hc rule class='Signal' tag='CHAT'
hc rule class='discord' tag='CHAT'
hc rule class='Thunderbird' tag='CHAT'
hc rule class='Virt-manager' tag='VIRT'
hc rule class='Display' floating=on # Font display window
hc rule class='stacer' floating=on
hc rule title='meet.google.com is sharing your screen.' floating=on # Google meet indicator
hc rule title='meet.google.com is sharing a window.' floating=on # Google meet indicator
hc rule class='Dragon-drag-and-drop' floating=on
hc rule class='Steam' floating=on
hc rule class='Lxpolkit' floating=on
hc rule class='Gtkwave' floating=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
hc detect_monitors
